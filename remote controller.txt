#define LCD_ADDR 						 0x4E       
#define I2C_ADDRESS_READ                                         0x4F
#define PIN_RS                                                 1 << 0       
#define PIN_EN                                                 1 << 2        
#define BACKLIGHT                                              1 << 3         
#define LCD_DELAY_MS                                                5 

ADC_HandleTypeDef hadc1;
DMA_HandleTypeDef hdma_adc1;

I2C_HandleTypeDef hi2c1;

UART_HandleTypeDef huart1;

static void MX_ADC1_Init(void);
static void MX_I2C1_Init(void);
static void MX_USART1_UART_Init(void);



void I2C_send(uint8_t data, uint8_t flags)
{
	uint8_t up = data & 0xF0;       							// старший бит          
	uint8_t lo = (data << 4) & 0xF0;         						// младший бит
	                                          
	uint8_t data_arr[4];
	data_arr[0] = up|flags|BACKLIGHT|PIN_EN; 						// преобразуем данные
	data_arr[1] = up|flags|BACKLIGHT;         
	data_arr[2] = lo|flags|BACKLIGHT|PIN_EN;
	data_arr[3] = lo|flags|BACKLIGHT;

	HAL_I2C_Master_Transmit(&hi2c1, LCD_ADDR, data_arr, sizeof(data_arr), HAL_MAX_DELAY);	// отправляем даннные
	HAL_Delay(LCD_DELAY_MS);								// устанавливаем задержку, чтобы данные точно успели поступить
}

void LCD_SendString(char *str)									// отправляем строку побуквенно с помощью предыдущей функции
{
	while(*str) { 
		I2C_send((uint8_t)(*str), 1);              
        str++;                                      
    }
}

void lcd_put_cur(int row, int col)								// заполняем экран
{
    switch (row)
    {
        case 0:
            col |= 0x80;
            break;
        case 1:
            col |= 0xC0;
            break;
    }

    I2C_send(col, 0);
}


char str[50];


 MX_DMA_Init();
 MX_ADC1_Init();
 MX_I2C1_Init();

I2C_send(0x30,0); 										// преобразовываем в 8-битному формату
I2C_send(0x02,0);  										// устанавливаем курсор на начало строки
I2C_send(0x0C,0);   										// нормальный режим работы
I2C_send(0x01,0);   										// очищаем
	
I2C_send(0x80,0);  
LCD_SendString("  Hello from");
I2C_send(0xC0,0);  
LCD_SendString(" Julia");
I2C_send(0x94,0);

HAL_Delay(2000);
I2C_send(0x01,0); 	
I2C_send(0x80,0);  
LCD_SendString("  GOOD");
I2C_send(0xC0,0);  
LCD_SendString("         GAME!");
I2C_send(0x94,0);
HAL_Delay(1000);	
	
uint16_t x = 0;
uint16_t y = 0;

while (1)
{
	HAL_ADCEx_InjectedStart(&hadc1);							// Разрешает работу АЦП и запускает преобразование инжектированной группы
	HAL_ADC_PollForConversion(&hadc1, 50);
	
	y = HAL_ADCEx_InjectedGetValue(&hadc1, ADC_INJECTED_RANK_1)/820;
	x = HAL_ADCEx_InjectedGetValue(&hadc1, ADC_INJECTED_RANK_2)/55;		
		
	lcd_put_cur(y, 14 - x);
	LCD_SendString("A");
	HAL_Delay(60);
	I2C_send(0x01,0); 
}
