#define I2C_ADDRESS                                              0x3C			// I2C адрес устройства
#define I2C_TIMEOUT                                              100			// время между передачами данных по I2C
#define Button_read HAL_GPIO_ReadPin(USER_Btn_GPIO_Port, USER_Btn_Pin)

uint8_t regData[6] = {0};								// массив, в который мы записываем данные с шины I2C
uint8_t regAddress[4] = {0};								// массив регистров устройства
double DataX = 0;									// необработанные данные с компаса
double DataY = 0;
double DataZ = 0;
double Axy = 0;										// текущее положение углов
double Axz = 0;
double Ayz = 0;
double xy0 = 0; 									// начальное положение углов
double xz0 = 0;
double yz0 = 0;

HAL_I2C_Master_Transmit(&hi2c1, I2C_ADDRESS, regAddress, 4, I2C_TIMEOUT);		// говорим, что сейчас будем читать данные		
HAL_I2C_Master_Transmit(&hi2c1, I2C_ADDRESS, regAddress, 1, I2C_TIMEOUT);

while (1)
{
	if(Button_read == 1){								// если кнопка нажата, то производим
		xy0 = atan2(DataY, DataX)*57;						// установку начального значения
		xz0 = atan2(DataZ, DataX)*57;
		yz0 = atan2(DataZ, DataY)*57;
	}
	regAddress[0] = 3;								// читаем данные с 3 регистра, так как
											// начиная с него лежат данные с магнитометра
	HAL_I2C_Master_Transmit(&hi2c1, I2C_ADDRESS, regAddress, 1, I2C_TIMEOUT);	// объявляем, что будем считывать данные с 3 регистра
	HAL_I2C_Master_Receive(&hi2c1, I2C_ADDRESS, regData, 6, I2C_TIMEOUT);		// читаем данные
	HAL_Delay(200);									// устанавливаем задержку, чтобы компас точно успел принять данные,
											// так как непонятно, с какой точно частотой он их принимает
	DataX = (double)((((uint16_t)regData[0])<<8) | ((uint16_t)regData[1]));		// преобразуем данные (преобразование у типу uint16_t, а потом и double,
	DataY = (double)((((uint16_t)regData[2])<<8) | ((uint16_t)regData[3]));		// побитовый сдвиг и сложение)
	DataZ = (double)((((uint16_t)regData[4])<<8) | ((uint16_t)regData[5]));
		
	Axy = xy0 - atan2(DataY, DataX)*57;						// считаем углы отклонений по осям
	Axz = xz0 - atan2(DataZ, DataX)*57;
	Ayz = yz0 - atan2(DataZ, DataY)*57;
	}
}
